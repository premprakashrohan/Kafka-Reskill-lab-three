/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ibm.avro.model.V2;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CustomObject extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5288516836284339065L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CustomObject\",\"namespace\":\"com.ibm.avro.model.V2\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"invoiceNumber\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"stockCode\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"description\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"quantity\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"invoiceDate\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"unitPrice\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"customeId\",\"type\":\"string\",\"avro.java.string\":\"String\"},{\"name\":\"countryName\",\"type\":\"string\",\"avro.java.string\":\"String\"}],\"version\":2}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CustomObject> ENCODER =
      new BinaryMessageEncoder<CustomObject>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CustomObject> DECODER =
      new BinaryMessageDecoder<CustomObject>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<CustomObject> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<CustomObject> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CustomObject>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this CustomObject to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a CustomObject from a ByteBuffer. */
  public static CustomObject fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence id;
  @Deprecated public java.lang.CharSequence invoiceNumber;
  @Deprecated public java.lang.CharSequence stockCode;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public java.lang.CharSequence quantity;
  @Deprecated public java.lang.CharSequence invoiceDate;
  @Deprecated public java.lang.CharSequence unitPrice;
  @Deprecated public java.lang.CharSequence customeId;
  @Deprecated public java.lang.CharSequence countryName;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CustomObject() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param invoiceNumber The new value for invoiceNumber
   * @param stockCode The new value for stockCode
   * @param description The new value for description
   * @param quantity The new value for quantity
   * @param invoiceDate The new value for invoiceDate
   * @param unitPrice The new value for unitPrice
   * @param customeId The new value for customeId
   * @param countryName The new value for countryName
   */
  public CustomObject(java.lang.CharSequence id, java.lang.CharSequence invoiceNumber, java.lang.CharSequence stockCode, java.lang.CharSequence description, java.lang.CharSequence quantity, java.lang.CharSequence invoiceDate, java.lang.CharSequence unitPrice, java.lang.CharSequence customeId, java.lang.CharSequence countryName) {
    this.id = id;
    this.invoiceNumber = invoiceNumber;
    this.stockCode = stockCode;
    this.description = description;
    this.quantity = quantity;
    this.invoiceDate = invoiceDate;
    this.unitPrice = unitPrice;
    this.customeId = customeId;
    this.countryName = countryName;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return invoiceNumber;
    case 2: return stockCode;
    case 3: return description;
    case 4: return quantity;
    case 5: return invoiceDate;
    case 6: return unitPrice;
    case 7: return customeId;
    case 8: return countryName;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: invoiceNumber = (java.lang.CharSequence)value$; break;
    case 2: stockCode = (java.lang.CharSequence)value$; break;
    case 3: description = (java.lang.CharSequence)value$; break;
    case 4: quantity = (java.lang.CharSequence)value$; break;
    case 5: invoiceDate = (java.lang.CharSequence)value$; break;
    case 6: unitPrice = (java.lang.CharSequence)value$; break;
    case 7: customeId = (java.lang.CharSequence)value$; break;
    case 8: countryName = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'invoiceNumber' field.
   * @return The value of the 'invoiceNumber' field.
   */
  public java.lang.CharSequence getInvoiceNumber() {
    return invoiceNumber;
  }

  /**
   * Sets the value of the 'invoiceNumber' field.
   * @param value the value to set.
   */
  public void setInvoiceNumber(java.lang.CharSequence value) {
    this.invoiceNumber = value;
  }

  /**
   * Gets the value of the 'stockCode' field.
   * @return The value of the 'stockCode' field.
   */
  public java.lang.CharSequence getStockCode() {
    return stockCode;
  }

  /**
   * Sets the value of the 'stockCode' field.
   * @param value the value to set.
   */
  public void setStockCode(java.lang.CharSequence value) {
    this.stockCode = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.lang.CharSequence getQuantity() {
    return quantity;
  }

  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.CharSequence value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'invoiceDate' field.
   * @return The value of the 'invoiceDate' field.
   */
  public java.lang.CharSequence getInvoiceDate() {
    return invoiceDate;
  }

  /**
   * Sets the value of the 'invoiceDate' field.
   * @param value the value to set.
   */
  public void setInvoiceDate(java.lang.CharSequence value) {
    this.invoiceDate = value;
  }

  /**
   * Gets the value of the 'unitPrice' field.
   * @return The value of the 'unitPrice' field.
   */
  public java.lang.CharSequence getUnitPrice() {
    return unitPrice;
  }

  /**
   * Sets the value of the 'unitPrice' field.
   * @param value the value to set.
   */
  public void setUnitPrice(java.lang.CharSequence value) {
    this.unitPrice = value;
  }

  /**
   * Gets the value of the 'customeId' field.
   * @return The value of the 'customeId' field.
   */
  public java.lang.CharSequence getCustomeId() {
    return customeId;
  }

  /**
   * Sets the value of the 'customeId' field.
   * @param value the value to set.
   */
  public void setCustomeId(java.lang.CharSequence value) {
    this.customeId = value;
  }

  /**
   * Gets the value of the 'countryName' field.
   * @return The value of the 'countryName' field.
   */
  public java.lang.CharSequence getCountryName() {
    return countryName;
  }

  /**
   * Sets the value of the 'countryName' field.
   * @param value the value to set.
   */
  public void setCountryName(java.lang.CharSequence value) {
    this.countryName = value;
  }

  /**
   * Creates a new CustomObject RecordBuilder.
   * @return A new CustomObject RecordBuilder
   */
  public static com.ibm.avro.model.V2.CustomObject.Builder newBuilder() {
    return new com.ibm.avro.model.V2.CustomObject.Builder();
  }

  /**
   * Creates a new CustomObject RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CustomObject RecordBuilder
   */
  public static com.ibm.avro.model.V2.CustomObject.Builder newBuilder(com.ibm.avro.model.V2.CustomObject.Builder other) {
    return new com.ibm.avro.model.V2.CustomObject.Builder(other);
  }

  /**
   * Creates a new CustomObject RecordBuilder by copying an existing CustomObject instance.
   * @param other The existing instance to copy.
   * @return A new CustomObject RecordBuilder
   */
  public static com.ibm.avro.model.V2.CustomObject.Builder newBuilder(com.ibm.avro.model.V2.CustomObject other) {
    return new com.ibm.avro.model.V2.CustomObject.Builder(other);
  }

  /**
   * RecordBuilder for CustomObject instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CustomObject>
    implements org.apache.avro.data.RecordBuilder<CustomObject> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence invoiceNumber;
    private java.lang.CharSequence stockCode;
    private java.lang.CharSequence description;
    private java.lang.CharSequence quantity;
    private java.lang.CharSequence invoiceDate;
    private java.lang.CharSequence unitPrice;
    private java.lang.CharSequence customeId;
    private java.lang.CharSequence countryName;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ibm.avro.model.V2.CustomObject.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.invoiceNumber)) {
        this.invoiceNumber = data().deepCopy(fields()[1].schema(), other.invoiceNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stockCode)) {
        this.stockCode = data().deepCopy(fields()[2].schema(), other.stockCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.quantity)) {
        this.quantity = data().deepCopy(fields()[4].schema(), other.quantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.invoiceDate)) {
        this.invoiceDate = data().deepCopy(fields()[5].schema(), other.invoiceDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[6].schema(), other.unitPrice);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.customeId)) {
        this.customeId = data().deepCopy(fields()[7].schema(), other.customeId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.countryName)) {
        this.countryName = data().deepCopy(fields()[8].schema(), other.countryName);
        fieldSetFlags()[8] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing CustomObject instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ibm.avro.model.V2.CustomObject other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.invoiceNumber)) {
        this.invoiceNumber = data().deepCopy(fields()[1].schema(), other.invoiceNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stockCode)) {
        this.stockCode = data().deepCopy(fields()[2].schema(), other.stockCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.quantity)) {
        this.quantity = data().deepCopy(fields()[4].schema(), other.quantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.invoiceDate)) {
        this.invoiceDate = data().deepCopy(fields()[5].schema(), other.invoiceDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.unitPrice)) {
        this.unitPrice = data().deepCopy(fields()[6].schema(), other.unitPrice);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.customeId)) {
        this.customeId = data().deepCopy(fields()[7].schema(), other.customeId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.countryName)) {
        this.countryName = data().deepCopy(fields()[8].schema(), other.countryName);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'invoiceNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getInvoiceNumber() {
      return invoiceNumber;
    }

    /**
      * Sets the value of the 'invoiceNumber' field.
      * @param value The value of 'invoiceNumber'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setInvoiceNumber(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.invoiceNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'invoiceNumber' field has been set.
      * @return True if the 'invoiceNumber' field has been set, false otherwise.
      */
    public boolean hasInvoiceNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'invoiceNumber' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearInvoiceNumber() {
      invoiceNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'stockCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getStockCode() {
      return stockCode;
    }

    /**
      * Sets the value of the 'stockCode' field.
      * @param value The value of 'stockCode'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setStockCode(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.stockCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'stockCode' field has been set.
      * @return True if the 'stockCode' field has been set, false otherwise.
      */
    public boolean hasStockCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'stockCode' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearStockCode() {
      stockCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.lang.CharSequence getQuantity() {
      return quantity;
    }

    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setQuantity(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.quantity = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'invoiceDate' field.
      * @return The value.
      */
    public java.lang.CharSequence getInvoiceDate() {
      return invoiceDate;
    }

    /**
      * Sets the value of the 'invoiceDate' field.
      * @param value The value of 'invoiceDate'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setInvoiceDate(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.invoiceDate = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'invoiceDate' field has been set.
      * @return True if the 'invoiceDate' field has been set, false otherwise.
      */
    public boolean hasInvoiceDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'invoiceDate' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearInvoiceDate() {
      invoiceDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'unitPrice' field.
      * @return The value.
      */
    public java.lang.CharSequence getUnitPrice() {
      return unitPrice;
    }

    /**
      * Sets the value of the 'unitPrice' field.
      * @param value The value of 'unitPrice'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setUnitPrice(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.unitPrice = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'unitPrice' field has been set.
      * @return True if the 'unitPrice' field has been set, false otherwise.
      */
    public boolean hasUnitPrice() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'unitPrice' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearUnitPrice() {
      unitPrice = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'customeId' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomeId() {
      return customeId;
    }

    /**
      * Sets the value of the 'customeId' field.
      * @param value The value of 'customeId'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setCustomeId(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.customeId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'customeId' field has been set.
      * @return True if the 'customeId' field has been set, false otherwise.
      */
    public boolean hasCustomeId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'customeId' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearCustomeId() {
      customeId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountryName() {
      return countryName;
    }

    /**
      * Sets the value of the 'countryName' field.
      * @param value The value of 'countryName'.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder setCountryName(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.countryName = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'countryName' field has been set.
      * @return True if the 'countryName' field has been set, false otherwise.
      */
    public boolean hasCountryName() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'countryName' field.
      * @return This builder.
      */
    public com.ibm.avro.model.V2.CustomObject.Builder clearCountryName() {
      countryName = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CustomObject build() {
      try {
        CustomObject record = new CustomObject();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.invoiceNumber = fieldSetFlags()[1] ? this.invoiceNumber : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.stockCode = fieldSetFlags()[2] ? this.stockCode : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.quantity = fieldSetFlags()[4] ? this.quantity : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.invoiceDate = fieldSetFlags()[5] ? this.invoiceDate : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.unitPrice = fieldSetFlags()[6] ? this.unitPrice : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.customeId = fieldSetFlags()[7] ? this.customeId : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.countryName = fieldSetFlags()[8] ? this.countryName : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CustomObject>
    WRITER$ = (org.apache.avro.io.DatumWriter<CustomObject>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CustomObject>
    READER$ = (org.apache.avro.io.DatumReader<CustomObject>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
